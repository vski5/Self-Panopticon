module.exports =
/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, { enumerable: true, get: getter });
/******/ 		}
/******/ 	};
/******/
/******/ 	// define __esModule on exports
/******/ 	__webpack_require__.r = function(exports) {
/******/ 		if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 			Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 		}
/******/ 		Object.defineProperty(exports, '__esModule', { value: true });
/******/ 	};
/******/
/******/ 	// create a fake namespace object
/******/ 	// mode & 1: value is a module id, require it
/******/ 	// mode & 2: merge all properties of value into the ns
/******/ 	// mode & 4: return value when already ns object
/******/ 	// mode & 8|1: behave like require
/******/ 	__webpack_require__.t = function(value, mode) {
/******/ 		if(mode & 1) value = __webpack_require__(value);
/******/ 		if(mode & 8) return value;
/******/ 		if((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;
/******/ 		var ns = Object.create(null);
/******/ 		__webpack_require__.r(ns);
/******/ 		Object.defineProperty(ns, 'default', { enumerable: true, value: value });
/******/ 		if(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));
/******/ 		return ns;
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = "./widget/index.ts");
/******/ })
/************************************************************************/
/******/ ({

/***/ "./node_modules/css-loader/dist/cjs.js!./node_modules/sass-loader/dist/cjs.js!./widget/styles/index.scss":
/*!***************************************************************************************************************!*\
  !*** ./node_modules/css-loader/dist/cjs.js!./node_modules/sass-loader/dist/cjs.js!./widget/styles/index.scss ***!
  \***************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

exports = module.exports = __webpack_require__(/*! ../../node_modules/css-loader/dist/runtime/api.js */ "./node_modules/css-loader/dist/runtime/api.js")(false);
// Module
exports.push([module.i, ".matic-widget {\n  position: fixed;\n  transition: transform 1s;\n  background-color: #fff;\n  z-index: 10000;\n  height: 100%;\n  width: 100%;\n  max-height: 100%;\n  max-width: 100%; }\n  .matic-widget.mobile-position {\n    top: 0;\n    right: 0;\n    bottom: 0;\n    left: 0; }\n  @media (min-width: 576px) {\n    .matic-widget {\n      max-height: 90%;\n      max-width: 80%;\n      border: 1px solid #f1eded;\n      border-radius: 20px; } }\n  .matic-widget--slide-down {\n    transform: translateY(1000px);\n    border-radius: 20px; }\n  .matic-widget--slide-up {\n    transform: translateY(0); }\n  .matic-widget--hide {\n    display: none; }\n  .matic-widget__iframe {\n    width: 100%;\n    height: 100%;\n    border: none; }\n  .matic-widget--center {\n    left: 0;\n    right: 0;\n    margin-left: auto;\n    margin-right: auto;\n    top: 0;\n    bottom: 0;\n    margin-top: auto;\n    margin-bottom: auto; }\n  .matic-widget--bottom-right {\n    bottom: 5px;\n    right: 5px; }\n  .matic-widget--bottom-left {\n    bottom: 5px;\n    left: 5px; }\n  .matic-widget__overlay::before {\n    content: \"\";\n    position: fixed;\n    top: 0;\n    left: 0;\n    width: 100%;\n    height: 100%;\n    background-color: rgba(0, 0, 0, 0.2);\n    border-radius: 20px;\n    animation: 0.3s ease 1.87s forwards fade-in; }\n  .matic-widget__loading {\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    border-radius: 20px; }\n\n@keyframes fade-in {\n  0% {\n    border-radius: 20px; }\n  80% {\n    border-radius: 20px; }\n  100% {\n    border-radius: 0; } }\n", ""]);



/***/ }),

/***/ "./node_modules/css-loader/dist/runtime/api.js":
/*!*****************************************************!*\
  !*** ./node_modules/css-loader/dist/runtime/api.js ***!
  \*****************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


/*
  MIT License http://www.opensource.org/licenses/mit-license.php
  Author Tobias Koppers @sokra
*/
// css base code, injected by the css-loader
module.exports = function (useSourceMap) {
  var list = []; // return the list of modules as css string

  list.toString = function toString() {
    return this.map(function (item) {
      var content = cssWithMappingToString(item, useSourceMap);

      if (item[2]) {
        return '@media ' + item[2] + '{' + content + '}';
      } else {
        return content;
      }
    }).join('');
  }; // import a list of modules into the list


  list.i = function (modules, mediaQuery) {
    if (typeof modules === 'string') {
      modules = [[null, modules, '']];
    }

    var alreadyImportedModules = {};

    for (var i = 0; i < this.length; i++) {
      var id = this[i][0];

      if (id != null) {
        alreadyImportedModules[id] = true;
      }
    }

    for (i = 0; i < modules.length; i++) {
      var item = modules[i]; // skip already imported module
      // this implementation is not 100% perfect for weird media query combinations
      // when a module is imported multiple times with different media queries.
      // I hope this will never occur (Hey this way we have smaller bundles)

      if (item[0] == null || !alreadyImportedModules[item[0]]) {
        if (mediaQuery && !item[2]) {
          item[2] = mediaQuery;
        } else if (mediaQuery) {
          item[2] = '(' + item[2] + ') and (' + mediaQuery + ')';
        }

        list.push(item);
      }
    }
  };

  return list;
};

function cssWithMappingToString(item, useSourceMap) {
  var content = item[1] || '';
  var cssMapping = item[3];

  if (!cssMapping) {
    return content;
  }

  if (useSourceMap && typeof btoa === 'function') {
    var sourceMapping = toComment(cssMapping);
    var sourceURLs = cssMapping.sources.map(function (source) {
      return '/*# sourceURL=' + cssMapping.sourceRoot + source + ' */';
    });
    return [content].concat(sourceURLs).concat([sourceMapping]).join('\n');
  }

  return [content].join('\n');
} // Adapted from convert-source-map (MIT)


function toComment(sourceMap) {
  // eslint-disable-next-line no-undef
  var base64 = btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap))));
  var data = 'sourceMappingURL=data:application/json;charset=utf-8;base64,' + base64;
  return '/*# ' + data + ' */';
}

/***/ }),

/***/ "./node_modules/style-loader/lib/addStyles.js":
/*!****************************************************!*\
  !*** ./node_modules/style-loader/lib/addStyles.js ***!
  \****************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

/*
	MIT License http://www.opensource.org/licenses/mit-license.php
	Author Tobias Koppers @sokra
*/

var stylesInDom = {};

var	memoize = function (fn) {
	var memo;

	return function () {
		if (typeof memo === "undefined") memo = fn.apply(this, arguments);
		return memo;
	};
};

var isOldIE = memoize(function () {
	// Test for IE <= 9 as proposed by Browserhacks
	// @see http://browserhacks.com/#hack-e71d8692f65334173fee715c222cb805
	// Tests for existence of standard globals is to allow style-loader
	// to operate correctly into non-standard environments
	// @see https://github.com/webpack-contrib/style-loader/issues/177
	return window && document && document.all && !window.atob;
});

var getTarget = function (target, parent) {
  if (parent){
    return parent.querySelector(target);
  }
  return document.querySelector(target);
};

var getElement = (function (fn) {
	var memo = {};

	return function(target, parent) {
                // If passing function in options, then use it for resolve "head" element.
                // Useful for Shadow Root style i.e
                // {
                //   insertInto: function () { return document.querySelector("#foo").shadowRoot }
                // }
                if (typeof target === 'function') {
                        return target();
                }
                if (typeof memo[target] === "undefined") {
			var styleTarget = getTarget.call(this, target, parent);
			// Special case to return head of iframe instead of iframe itself
			if (window.HTMLIFrameElement && styleTarget instanceof window.HTMLIFrameElement) {
				try {
					// This will throw an exception if access to iframe is blocked
					// due to cross-origin restrictions
					styleTarget = styleTarget.contentDocument.head;
				} catch(e) {
					styleTarget = null;
				}
			}
			memo[target] = styleTarget;
		}
		return memo[target]
	};
})();

var singleton = null;
var	singletonCounter = 0;
var	stylesInsertedAtTop = [];

var	fixUrls = __webpack_require__(/*! ./urls */ "./node_modules/style-loader/lib/urls.js");

module.exports = function(list, options) {
	if (typeof DEBUG !== "undefined" && DEBUG) {
		if (typeof document !== "object") throw new Error("The style-loader cannot be used in a non-browser environment");
	}

	options = options || {};

	options.attrs = typeof options.attrs === "object" ? options.attrs : {};

	// Force single-tag solution on IE6-9, which has a hard limit on the # of <style>
	// tags it will allow on a page
	if (!options.singleton && typeof options.singleton !== "boolean") options.singleton = isOldIE();

	// By default, add <style> tags to the <head> element
        if (!options.insertInto) options.insertInto = "head";

	// By default, add <style> tags to the bottom of the target
	if (!options.insertAt) options.insertAt = "bottom";

	var styles = listToStyles(list, options);

	addStylesToDom(styles, options);

	return function update (newList) {
		var mayRemove = [];

		for (var i = 0; i < styles.length; i++) {
			var item = styles[i];
			var domStyle = stylesInDom[item.id];

			domStyle.refs--;
			mayRemove.push(domStyle);
		}

		if(newList) {
			var newStyles = listToStyles(newList, options);
			addStylesToDom(newStyles, options);
		}

		for (var i = 0; i < mayRemove.length; i++) {
			var domStyle = mayRemove[i];

			if(domStyle.refs === 0) {
				for (var j = 0; j < domStyle.parts.length; j++) domStyle.parts[j]();

				delete stylesInDom[domStyle.id];
			}
		}
	};
};

function addStylesToDom (styles, options) {
	for (var i = 0; i < styles.length; i++) {
		var item = styles[i];
		var domStyle = stylesInDom[item.id];

		if(domStyle) {
			domStyle.refs++;

			for(var j = 0; j < domStyle.parts.length; j++) {
				domStyle.parts[j](item.parts[j]);
			}

			for(; j < item.parts.length; j++) {
				domStyle.parts.push(addStyle(item.parts[j], options));
			}
		} else {
			var parts = [];

			for(var j = 0; j < item.parts.length; j++) {
				parts.push(addStyle(item.parts[j], options));
			}

			stylesInDom[item.id] = {id: item.id, refs: 1, parts: parts};
		}
	}
}

function listToStyles (list, options) {
	var styles = [];
	var newStyles = {};

	for (var i = 0; i < list.length; i++) {
		var item = list[i];
		var id = options.base ? item[0] + options.base : item[0];
		var css = item[1];
		var media = item[2];
		var sourceMap = item[3];
		var part = {css: css, media: media, sourceMap: sourceMap};

		if(!newStyles[id]) styles.push(newStyles[id] = {id: id, parts: [part]});
		else newStyles[id].parts.push(part);
	}

	return styles;
}

function insertStyleElement (options, style) {
	var target = getElement(options.insertInto)

	if (!target) {
		throw new Error("Couldn't find a style target. This probably means that the value for the 'insertInto' parameter is invalid.");
	}

	var lastStyleElementInsertedAtTop = stylesInsertedAtTop[stylesInsertedAtTop.length - 1];

	if (options.insertAt === "top") {
		if (!lastStyleElementInsertedAtTop) {
			target.insertBefore(style, target.firstChild);
		} else if (lastStyleElementInsertedAtTop.nextSibling) {
			target.insertBefore(style, lastStyleElementInsertedAtTop.nextSibling);
		} else {
			target.appendChild(style);
		}
		stylesInsertedAtTop.push(style);
	} else if (options.insertAt === "bottom") {
		target.appendChild(style);
	} else if (typeof options.insertAt === "object" && options.insertAt.before) {
		var nextSibling = getElement(options.insertAt.before, target);
		target.insertBefore(style, nextSibling);
	} else {
		throw new Error("[Style Loader]\n\n Invalid value for parameter 'insertAt' ('options.insertAt') found.\n Must be 'top', 'bottom', or Object.\n (https://github.com/webpack-contrib/style-loader#insertat)\n");
	}
}

function removeStyleElement (style) {
	if (style.parentNode === null) return false;
	style.parentNode.removeChild(style);

	var idx = stylesInsertedAtTop.indexOf(style);
	if(idx >= 0) {
		stylesInsertedAtTop.splice(idx, 1);
	}
}

function createStyleElement (options) {
	var style = document.createElement("style");

	if(options.attrs.type === undefined) {
		options.attrs.type = "text/css";
	}

	if(options.attrs.nonce === undefined) {
		var nonce = getNonce();
		if (nonce) {
			options.attrs.nonce = nonce;
		}
	}

	addAttrs(style, options.attrs);
	insertStyleElement(options, style);

	return style;
}

function createLinkElement (options) {
	var link = document.createElement("link");

	if(options.attrs.type === undefined) {
		options.attrs.type = "text/css";
	}
	options.attrs.rel = "stylesheet";

	addAttrs(link, options.attrs);
	insertStyleElement(options, link);

	return link;
}

function addAttrs (el, attrs) {
	Object.keys(attrs).forEach(function (key) {
		el.setAttribute(key, attrs[key]);
	});
}

function getNonce() {
	if (false) {}

	return __webpack_require__.nc;
}

function addStyle (obj, options) {
	var style, update, remove, result;

	// If a transform function was defined, run it on the css
	if (options.transform && obj.css) {
	    result = typeof options.transform === 'function'
		 ? options.transform(obj.css) 
		 : options.transform.default(obj.css);

	    if (result) {
	    	// If transform returns a value, use that instead of the original css.
	    	// This allows running runtime transformations on the css.
	    	obj.css = result;
	    } else {
	    	// If the transform function returns a falsy value, don't add this css.
	    	// This allows conditional loading of css
	    	return function() {
	    		// noop
	    	};
	    }
	}

	if (options.singleton) {
		var styleIndex = singletonCounter++;

		style = singleton || (singleton = createStyleElement(options));

		update = applyToSingletonTag.bind(null, style, styleIndex, false);
		remove = applyToSingletonTag.bind(null, style, styleIndex, true);

	} else if (
		obj.sourceMap &&
		typeof URL === "function" &&
		typeof URL.createObjectURL === "function" &&
		typeof URL.revokeObjectURL === "function" &&
		typeof Blob === "function" &&
		typeof btoa === "function"
	) {
		style = createLinkElement(options);
		update = updateLink.bind(null, style, options);
		remove = function () {
			removeStyleElement(style);

			if(style.href) URL.revokeObjectURL(style.href);
		};
	} else {
		style = createStyleElement(options);
		update = applyToTag.bind(null, style);
		remove = function () {
			removeStyleElement(style);
		};
	}

	update(obj);

	return function updateStyle (newObj) {
		if (newObj) {
			if (
				newObj.css === obj.css &&
				newObj.media === obj.media &&
				newObj.sourceMap === obj.sourceMap
			) {
				return;
			}

			update(obj = newObj);
		} else {
			remove();
		}
	};
}

var replaceText = (function () {
	var textStore = [];

	return function (index, replacement) {
		textStore[index] = replacement;

		return textStore.filter(Boolean).join('\n');
	};
})();

function applyToSingletonTag (style, index, remove, obj) {
	var css = remove ? "" : obj.css;

	if (style.styleSheet) {
		style.styleSheet.cssText = replaceText(index, css);
	} else {
		var cssNode = document.createTextNode(css);
		var childNodes = style.childNodes;

		if (childNodes[index]) style.removeChild(childNodes[index]);

		if (childNodes.length) {
			style.insertBefore(cssNode, childNodes[index]);
		} else {
			style.appendChild(cssNode);
		}
	}
}

function applyToTag (style, obj) {
	var css = obj.css;
	var media = obj.media;

	if(media) {
		style.setAttribute("media", media)
	}

	if(style.styleSheet) {
		style.styleSheet.cssText = css;
	} else {
		while(style.firstChild) {
			style.removeChild(style.firstChild);
		}

		style.appendChild(document.createTextNode(css));
	}
}

function updateLink (link, options, obj) {
	var css = obj.css;
	var sourceMap = obj.sourceMap;

	/*
		If convertToAbsoluteUrls isn't defined, but sourcemaps are enabled
		and there is no publicPath defined then lets turn convertToAbsoluteUrls
		on by default.  Otherwise default to the convertToAbsoluteUrls option
		directly
	*/
	var autoFixUrls = options.convertToAbsoluteUrls === undefined && sourceMap;

	if (options.convertToAbsoluteUrls || autoFixUrls) {
		css = fixUrls(css);
	}

	if (sourceMap) {
		// http://stackoverflow.com/a/26603875
		css += "\n/*# sourceMappingURL=data:application/json;base64," + btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap)))) + " */";
	}

	var blob = new Blob([css], { type: "text/css" });

	var oldSrc = link.href;

	link.href = URL.createObjectURL(blob);

	if(oldSrc) URL.revokeObjectURL(oldSrc);
}


/***/ }),

/***/ "./node_modules/style-loader/lib/urls.js":
/*!***********************************************!*\
  !*** ./node_modules/style-loader/lib/urls.js ***!
  \***********************************************/
/*! no static exports found */
/***/ (function(module, exports) {


/**
 * When source maps are enabled, `style-loader` uses a link element with a data-uri to
 * embed the css on the page. This breaks all relative urls because now they are relative to a
 * bundle instead of the current page.
 *
 * One solution is to only use full urls, but that may be impossible.
 *
 * Instead, this function "fixes" the relative urls to be absolute according to the current page location.
 *
 * A rudimentary test suite is located at `test/fixUrls.js` and can be run via the `npm test` command.
 *
 */

module.exports = function (css) {
  // get current location
  var location = typeof window !== "undefined" && window.location;

  if (!location) {
    throw new Error("fixUrls requires window.location");
  }

	// blank or null?
	if (!css || typeof css !== "string") {
	  return css;
  }

  var baseUrl = location.protocol + "//" + location.host;
  var currentDir = baseUrl + location.pathname.replace(/\/[^\/]*$/, "/");

	// convert each url(...)
	/*
	This regular expression is just a way to recursively match brackets within
	a string.

	 /url\s*\(  = Match on the word "url" with any whitespace after it and then a parens
	   (  = Start a capturing group
	     (?:  = Start a non-capturing group
	         [^)(]  = Match anything that isn't a parentheses
	         |  = OR
	         \(  = Match a start parentheses
	             (?:  = Start another non-capturing groups
	                 [^)(]+  = Match anything that isn't a parentheses
	                 |  = OR
	                 \(  = Match a start parentheses
	                     [^)(]*  = Match anything that isn't a parentheses
	                 \)  = Match a end parentheses
	             )  = End Group
              *\) = Match anything and then a close parens
          )  = Close non-capturing group
          *  = Match anything
       )  = Close capturing group
	 \)  = Match a close parens

	 /gi  = Get all matches, not the first.  Be case insensitive.
	 */
	var fixedCss = css.replace(/url\s*\(((?:[^)(]|\((?:[^)(]+|\([^)(]*\))*\))*)\)/gi, function(fullMatch, origUrl) {
		// strip quotes (if they exist)
		var unquotedOrigUrl = origUrl
			.trim()
			.replace(/^"(.*)"$/, function(o, $1){ return $1; })
			.replace(/^'(.*)'$/, function(o, $1){ return $1; });

		// already a full url? no change
		if (/^(#|data:|http:\/\/|https:\/\/|file:\/\/\/|\s*$)/i.test(unquotedOrigUrl)) {
		  return fullMatch;
		}

		// convert the url to a full url
		var newUrl;

		if (unquotedOrigUrl.indexOf("//") === 0) {
		  	//TODO: should we add protocol?
			newUrl = unquotedOrigUrl;
		} else if (unquotedOrigUrl.indexOf("/") === 0) {
			// path should be relative to the base url
			newUrl = baseUrl + unquotedOrigUrl; // already starts with '/'
		} else {
			// path should be relative to current directory
			newUrl = currentDir + unquotedOrigUrl.replace(/^\.\//, ""); // Strip leading './'
		}

		// send back the fixed url(...)
		return "url(" + JSON.stringify(newUrl) + ")";
	});

	// send back the fixed css
	return fixedCss;
};


/***/ }),

/***/ "./src/enums/widget_event.ts":
/*!***********************************!*\
  !*** ./src/enums/widget_event.ts ***!
  \***********************************/
/*! exports provided: WIDGET_EVENT */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "WIDGET_EVENT", function() { return WIDGET_EVENT; });
var WIDGET_EVENT;
(function (WIDGET_EVENT) {
    WIDGET_EVENT["close"] = "close";
    WIDGET_EVENT["burnInit"] = "burnInit";
    WIDGET_EVENT["burnComplete"] = "burnComplete";
    WIDGET_EVENT["exitInit"] = "exitInit";
    WIDGET_EVENT["exitError"] = "exitError";
    WIDGET_EVENT["exitComplete"] = "exitComplete";
    WIDGET_EVENT["confirmWithdrawInit"] = "confirmWithdrawInit";
    WIDGET_EVENT["confirmWithdrawComplete"] = "confirmWithdrawComplete";
    WIDGET_EVENT["confirmWithdrawError"] = "confirmWithdrawError";
    WIDGET_EVENT["load"] = "load";
    WIDGET_EVENT["approveInit"] = "approveInit";
    WIDGET_EVENT["approveComplete"] = "approveComplete";
    WIDGET_EVENT["approveError"] = "approveError";
    WIDGET_EVENT["depositInit"] = "depositInit";
    WIDGET_EVENT["depositComplete"] = "depositComplete";
    WIDGET_EVENT["depositError"] = "depositError";
})(WIDGET_EVENT || (WIDGET_EVENT = {}));


/***/ }),

/***/ "./widget/constants.ts":
/*!*****************************!*\
  !*** ./widget/constants.ts ***!
  \*****************************/
/*! exports provided: appVersion, defaultConfig */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "appVersion", function() { return appVersion; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "defaultConfig", function() { return defaultConfig; });
const appVersion = "1.3.12";
const defaultConfig = {
    autoShowTime: -1,
    height: 618,
    newTabForMobile: false,
    //title: "Matic Widget",
    width: 540,
    position: '',
    //type: 'wallet',
    //shouldfloat: true,
    appName: '',
    relativePath: '',
    assetsFromWidgetServer: true,
    overlay: false,
    style: {},
    closable: true,
    loading: {
        color: '#3e3e3e',
        background: '#f0f0f0',
        'font-size': '24px',
        'line-height': '28px',
    },
};


/***/ }),

/***/ "./widget/index.ts":
/*!*************************!*\
  !*** ./widget/index.ts ***!
  \*************************/
/*! exports provided: Widget */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Widget", function() { return Widget; });
/* harmony import */ var _constants__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./constants */ "./widget/constants.ts");
/* harmony import */ var _src_enums_widget_event__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../src/enums/widget_event */ "./src/enums/widget_event.ts");
/* harmony import */ var _styles_index_scss__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./styles/index.scss */ "./widget/styles/index.scss");
/* harmony import */ var _styles_index_scss__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(_styles_index_scss__WEBPACK_IMPORTED_MODULE_2__);
/* harmony import */ var _utils__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./utils */ "./widget/utils/index.ts");
var __awaiter = (undefined && undefined.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};




const MATIC_WIDGET = "matic-widget";
class Widget {
    constructor(config) {
        this._eventBus = new _utils__WEBPACK_IMPORTED_MODULE_3__["EventBus"]();
        this.isVisible = false;
        this.loaderElem = document.createElement('div');
        this.assetsLoaded = false;
        this.isAppLoaded = false;
        if (!config.network) {
            throw `{Matic Widget Error} : network is not specified. Please specify network type.`;
        }
        this._config = Object.assign(Object.assign({}, _constants__WEBPACK_IMPORTED_MODULE_0__["defaultConfig"]), config);
    }
    assetsLoader() {
        const config = this._config;
        this.loaderElem.className = `matic-widget matic-widget__loading`;
        if (!this.isMobileDevice()) {
            this.loaderElem.style.cssText = `height: ${config.height}px; width: ${config.width}px;`;
            this.loaderElem.classList.add(`matic-widget--${config.position}`);
        }
        else {
            this.loaderElem.classList.add('mobile-position');
        }
        const loadingStyle = config.loading;
        for (const key in loadingStyle) {
            this.loaderElem.style[key] = loadingStyle[key];
        }
        const loaderMessage = document.createElement('div');
        loaderMessage.innerHTML += '...loading';
        this.loaderElem.appendChild(loaderMessage);
        document.body.appendChild(this.loaderElem);
    }
    loadAssets(srcList) {
        return __awaiter(this, void 0, void 0, function* () {
            const promises = srcList.map(src => {
                return Object(_utils__WEBPACK_IMPORTED_MODULE_3__["loadScript"])(src);
            });
            return Promise.all(promises);
        });
    }
    getAssets() {
        return __awaiter(this, void 0, void 0, function* () {
            const manifestPath = Widget.assetsUrl + "manifest.js";
            yield Object(_utils__WEBPACK_IMPORTED_MODULE_3__["loadScript"])(manifestPath);
            return polygonWidgetManifest;
        });
    }
    create() {
        return __awaiter(this, void 0, void 0, function* () {
            const config = this._config;
            if (config.assetsFromWidgetServer) {
                const assets = yield this.getAssets();
                const srcList = assets.map(asset => {
                    return `${Widget.assetsUrl}${asset}`;
                });
                yield this.loadAssets(srcList);
                this.isAppLoaded = true;
            }
            if (config.target) {
                const els = document.querySelectorAll(config.target);
                if (els.length == 0) {
                    throw `{Matic Widget Error} : invalid target supplied. Please provide a valid element selector.`;
                }
                els.forEach((el) => {
                    el.onclick = () => {
                        this.show();
                    };
                });
            }
            const el = document.createElement('div');
            this._el = el;
            el.className = `matic-widget matic-widget--hide`;
            if (!this.isMobileDevice()) {
                el.style.cssText = `height:${config.height}px;width:${config.width}px;`;
                el.classList.add(`matic-widget--${config.position}`);
            }
            else {
                el.classList.add('mobile-position');
            }
            const configStyle = config.style;
            for (const key in configStyle) {
                el.style[key] = configStyle[key];
            }
            if (config.overlay) {
                el.className += ` matic-widget__overlay`;
            }
            const widgetEl = document.createElement(MATIC_WIDGET);
            this._widgetElem = widgetEl;
            widgetEl.className = "matic-widget__iframe";
            widgetEl.setAttribute('appid', config.appName);
            widgetEl.setAttribute('page', config.page);
            widgetEl.setAttribute('amount', config.amount);
            widgetEl.setAttribute('network', config.network);
            if (this.isMobileDevice()) {
                widgetEl.setAttribute('closable', 'true');
            }
            else {
                widgetEl.setAttribute('closable', config.closable);
            }
            el.appendChild(widgetEl);
            document.body.appendChild(el);
            this._onMessageFromWidget = (ev) => {
                const detail = ev.detail;
                if (!detail)
                    return;
                this._eventBus.emit(detail.name, detail.payload);
                switch (detail.name) {
                    case _src_enums_widget_event__WEBPACK_IMPORTED_MODULE_1__["WIDGET_EVENT"].close:
                        this.hide();
                        break;
                }
            };
            widgetEl.addEventListener('message', this._onMessageFromWidget);
            const autoShowTime = Number(config.autoShowTime);
            if (!isNaN(autoShowTime) && autoShowTime > 0) {
                setTimeout(() => {
                    this.show();
                }, autoShowTime);
            }
            this.assetsLoaded = true;
        });
    }
    show() {
        if (!this.assetsLoaded) {
            this.assetsLoader();
        }
        if (this.isVisible)
            return;
        if (!this.isAppLoaded) {
            console.warn("WIDGET NOT YET LOADED!");
            return;
        }
        this._el.classList.add('matic-widget--slide-down');
        this._el.classList.remove('matic-widget--hide');
        setTimeout(() => {
            Object(_utils__WEBPACK_IMPORTED_MODULE_3__["addAnimation"])(this._el, 'matic-widget--slide-up').then(_ => {
                this._el.classList.remove('matic-widget--slide-down');
                this._eventBus.emit('show');
                const loaderElem = this.loaderElem;
                if (loaderElem && document.body.contains(loaderElem)) {
                    document.body.removeChild(loaderElem);
                    this.loaderElem = null;
                }
            });
        }, 100);
        this.isVisible = true;
    }
    hide() {
        if (!this.isVisible)
            return;
        Object(_utils__WEBPACK_IMPORTED_MODULE_3__["addAnimation"])(this._el, 'matic-widget--slide-down').then(_ => {
            this._eventBus.emit('hide');
            this._el.classList.add('matic-widget--hide');
            this.isVisible = false;
        });
    }
    /*
      Complete withdraw transactions initialised by some other user
      by passing the TX details as payload to 'withdrawExit' API
      which dispatched a custom event 'withdraw' that navigates to
      the withdraw transaction page with the appropriate step/status
      (status obtained from the Bridge-Api)
    */
    withdrawExit(payload) {
        const widgetElem = this._widgetElem.shadowRoot;
        const myEvent = new CustomEvent("withdraw", {
            detail: payload,
            bubbles: true,
        });
        widgetElem.dispatchEvent(myEvent);
    }
    on(event, callback) {
        this._eventBus.on(event, callback);
        return this;
    }
    off(event, callback) {
        this._eventBus.off(event, callback);
    }
    isMobileDevice() {
        return window.screen.width < 576;
    }
    destroy() {
        const el = this._el;
        if (!el)
            return;
        const widget = el.querySelector('matic-widget');
        widget === null || widget === void 0 ? void 0 : widget.removeEventListener('message', this._onMessageFromWidget);
        document.body.removeChild(el);
    }
}
Widget.assetsUrl = `https://wallet-asset.matic.network/widget/`;


/***/ }),

/***/ "./widget/styles/index.scss":
/*!**********************************!*\
  !*** ./widget/styles/index.scss ***!
  \**********************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {


var content = __webpack_require__(/*! !../../node_modules/css-loader/dist/cjs.js!../../node_modules/sass-loader/dist/cjs.js!./index.scss */ "./node_modules/css-loader/dist/cjs.js!./node_modules/sass-loader/dist/cjs.js!./widget/styles/index.scss");

if(typeof content === 'string') content = [[module.i, content, '']];

var transform;
var insertInto;



var options = {"hmr":true}

options.transform = transform
options.insertInto = undefined;

var update = __webpack_require__(/*! ../../node_modules/style-loader/lib/addStyles.js */ "./node_modules/style-loader/lib/addStyles.js")(content, options);

if(content.locals) module.exports = content.locals;

if(false) {}

/***/ }),

/***/ "./widget/utils/animate_css.ts":
/*!*************************************!*\
  !*** ./widget/utils/animate_css.ts ***!
  \*************************************/
/*! exports provided: addAnimation */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "addAnimation", function() { return addAnimation; });
function addAnimation(element, animationName) {
    const node = typeof element == "string" ? document.querySelector(element) : element;
    return new Promise(res => {
        function handleAnimationEnd() {
            node.classList.remove(animationName);
            node.removeEventListener('transitionend', handleAnimationEnd);
            res();
        }
        node.classList.add(animationName);
        node.addEventListener('transitionend', handleAnimationEnd);
    });
}


/***/ }),

/***/ "./widget/utils/event_bus.ts":
/*!***********************************!*\
  !*** ./widget/utils/event_bus.ts ***!
  \***********************************/
/*! exports provided: EventBus */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "EventBus", function() { return EventBus; });
class EventBus {
    constructor() {
        this._events = {};
    }
    on(eventName, callback) {
        if (!this._events[eventName]) {
            this._events[eventName] = [];
        }
        this._events[eventName].push(callback);
    }
    off(eventName, callback) {
        if (callback) {
            const index = this._events[eventName].findIndex(q => q === callback);
            if (index >= 0) {
                this._events[eventName].splice(index, 1);
            }
        }
        else {
            this._events[eventName] = null;
        }
    }
    emit(eventName, ...args) {
        const events = this._events[eventName];
        if (events) {
            events.forEach(ev => {
                ev(args);
            });
        }
    }
}


/***/ }),

/***/ "./widget/utils/index.ts":
/*!*******************************!*\
  !*** ./widget/utils/index.ts ***!
  \*******************************/
/*! exports provided: EventBus, addAnimation, removeLastSlash, loadScript */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _event_bus__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./event_bus */ "./widget/utils/event_bus.ts");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "EventBus", function() { return _event_bus__WEBPACK_IMPORTED_MODULE_0__["EventBus"]; });

/* harmony import */ var _animate_css__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./animate_css */ "./widget/utils/animate_css.ts");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "addAnimation", function() { return _animate_css__WEBPACK_IMPORTED_MODULE_1__["addAnimation"]; });

/* harmony import */ var _remove_last_slash__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./remove_last_slash */ "./widget/utils/remove_last_slash.ts");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "removeLastSlash", function() { return _remove_last_slash__WEBPACK_IMPORTED_MODULE_2__["removeLastSlash"]; });

/* harmony import */ var _load_script__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./load_script */ "./widget/utils/load_script.ts");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "loadScript", function() { return _load_script__WEBPACK_IMPORTED_MODULE_3__["loadScript"]; });







/***/ }),

/***/ "./widget/utils/load_script.ts":
/*!*************************************!*\
  !*** ./widget/utils/load_script.ts ***!
  \*************************************/
/*! exports provided: loadScript */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "loadScript", function() { return loadScript; });
const loadScript = (src) => {
    const script = document.createElement('script');
    script.src = src;
    document.body.appendChild(script);
    return new Promise((res, rej) => {
        script.onload = res;
        script.onerror = rej;
    });
};


/***/ }),

/***/ "./widget/utils/remove_last_slash.ts":
/*!*******************************************!*\
  !*** ./widget/utils/remove_last_slash.ts ***!
  \*******************************************/
/*! exports provided: removeLastSlash */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "removeLastSlash", function() { return removeLastSlash; });
const removeLastSlash = (url) => {
    const lastIndex = url.length - 1;
    if (url[lastIndex] === "/") {
        url = url.substr(lastIndex);
    }
    return url;
};


/***/ })

/******/ });
//# sourceMappingURL=widget.commonjs2.js.map